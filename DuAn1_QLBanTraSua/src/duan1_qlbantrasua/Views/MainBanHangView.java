/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package duan1_qlbantrasua.Views;

import duan1_qlbantrasua.DomainModels.CTGioHang;
import duan1_qlbantrasua.DomainModels.DanhMucSP;
import duan1_qlbantrasua.DomainModels.HoaDon;
import duan1_qlbantrasua.DomainModels.HoaDonChiTiet;
import duan1_qlbantrasua.DomainModels.KhachHang;
import duan1_qlbantrasua.DomainModels.MucDa;
import duan1_qlbantrasua.DomainModels.MucDuong;
import duan1_qlbantrasua.DomainModels.NhanVien;
import duan1_qlbantrasua.DomainModels.SanPham;
import duan1_qlbantrasua.DomainModels.Topping;
import duan1_qlbantrasua.Services.CTGHServiece;
import duan1_qlbantrasua.Services.DanhMucService;
import duan1_qlbantrasua.Services.HDCTService;
import duan1_qlbantrasua.Services.HoaDonService;
import duan1_qlbantrasua.Services.KhachHangService;
import duan1_qlbantrasua.Services.SanPhamService;
import duan1_qlbantrasua.Services.impl.CTGHServiceImpl;
import duan1_qlbantrasua.Services.impl.DanhMucServiceImpl;
import duan1_qlbantrasua.Services.impl.HDCTServiceImpl;
import duan1_qlbantrasua.Services.impl.HoaDonServiceImpl;
import duan1_qlbantrasua.Services.impl.KhachHangServiceimpl;
import duan1_qlbantrasua.Services.impl.SanPhamServiceImpl;
import duan1_qlbantrasua.ViewModels.HDBHViewModel;
import duan1_qlbantrasua.ViewModels.SanPhamFromBanHang;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TrungVD
 */
public class MainBanHangView extends javax.swing.JPanel {

    private HoaDonService qLHoaDon;
    private SanPhamService qLSanPham;
    private CTGHServiece qLCTGH;
    private HDCTService qLHDCT;
    private DanhMucService qLDanhMuc;
    private KhachHangService qLKhachHang;
    private DefaultComboBoxModel dcbmDanhMuc;
    private DefaultTableModel dtm;
    private ArrayList<CTGioHang> listCTGH;
    private NhanVien nhanVienLogin;
    ArrayList<SanPham> listCanTim;

    public MainBanHangView() {
        initComponents();
        init();
        loadTableHDChuaThanhToan(qLHoaDon.getListHDChuaThanhToan());
        loadTableHDDaThanhToan(qLHoaDon.getListHDDaThanhToan());
        loadTableHDHuyThanhToan(qLHoaDon.getListHDHuyThanhToan());
        loadCBBDanhMuc(qLDanhMuc.getListDanhMucSPKinhDoanhDB());
        loadTableSanpham(qLSanPham.getListSPFormBH());
        if (txtTienKhachDua.getText().isEmpty() || txtTienKhachDua.getText().equalsIgnoreCase("0")) {
            btnThanhToan.setEnabled(false);
        }
        tblSanPham.setRowHeight(60);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHoaDonChoThanhToan = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDaThanhToan = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHuyThanhToan = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        btnLamMoiGioHang = new javax.swing.JButton();
        btnXoaMon = new javax.swing.JButton();
        btnTaoHoaDon = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblTongTienHang = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTenNhanVien = new javax.swing.JTextField();
        txtNgayTao = new javax.swing.JTextField();
        txtMaHoaDon = new javax.swing.JTextField();
        txtSDTKhachHang = new javax.swing.JTextField();
        txtTongTienHang = new javax.swing.JTextField();
        txtGiamGia = new javax.swing.JTextField();
        txtTienKhachDua = new javax.swing.JTextField();
        txtKhachCanTra = new javax.swing.JTextField();
        txtTienTraLai = new javax.swing.JTextField();
        btnHuy = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        btnTimKhachHang = new javax.swing.JButton();
        chkTienMat = new javax.swing.JCheckBox();
        chkChuyenKhoan = new javax.swing.JCheckBox();
        lblTenKhachHang = new javax.swing.JLabel();
        lblDiem = new javax.swing.JLabel();
        btnApDungDiemKM = new javax.swing.JButton();
        lblIDKH = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txaGhiChu = new javax.swing.JTextArea();
        txtTimKiemSanPham = new javax.swing.JTextField();
        cbbDanhMuc = new javax.swing.JComboBox<>();
        btnRefesh = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2), "Quản Lý Bán Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Thông Tin Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        tblHoaDonChoThanhToan.setBackground(new java.awt.Color(0, 51, 153));
        tblHoaDonChoThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblHoaDonChoThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        tblHoaDonChoThanhToan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Tên Nhân Viên", "Ngày Tạo", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDonChoThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonChoThanhToanMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblHoaDonChoThanhToan);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Chờ Thanh Toán", jPanel3);

        tblDaThanhToan.setBackground(new java.awt.Color(0, 204, 102));
        tblDaThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        tblDaThanhToan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Tên Nhân Viên", "Ngày Tạo", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDaThanhToan);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Đã Thanh Toán", jPanel4);

        tblHuyThanhToan.setBackground(new java.awt.Color(204, 51, 0));
        tblHuyThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        tblHuyThanhToan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Tên Nhân Viên", "Ngày Tạo", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblHuyThanhToan);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Hóa Đơn Hủy", jPanel5);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jPanel6.setBackground(new java.awt.Color(102, 204, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Thông Tin Sản Phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        tblSanPham.setBackground(new java.awt.Color(102, 153, 255));
        tblSanPham.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblSanPham.setForeground(new java.awt.Color(255, 255, 255));
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên Sản Phẩm", "Giá", "Danh Mục", "Hình Ảnh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblSanPham);
        if (tblSanPham.getColumnModel().getColumnCount() > 0) {
            tblSanPham.getColumnModel().getColumn(0).setMinWidth(100);
            tblSanPham.getColumnModel().getColumn(1).setMaxWidth(70);
            tblSanPham.getColumnModel().getColumn(2).setMinWidth(70);
            tblSanPham.getColumnModel().getColumn(3).setMaxWidth(60);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(102, 204, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Giỏ Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        tblGioHang.setBackground(new java.awt.Color(0, 51, 153));
        tblGioHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblGioHang.setForeground(new java.awt.Color(255, 255, 255));
        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên Món", "Số Lượng", "Mức Đường", "Mức Đá", "Topping", "Tổng Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblGioHang);

        btnLamMoiGioHang.setBackground(new java.awt.Color(102, 204, 255));
        btnLamMoiGioHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan1_qlbantrasua/Views/icon/loading.png"))); // NOI18N
        btnLamMoiGioHang.setBorder(null);
        btnLamMoiGioHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiGioHangActionPerformed(evt);
            }
        });

        btnXoaMon.setBackground(new java.awt.Color(102, 204, 255));
        btnXoaMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan1_qlbantrasua/Views/icon/deleteSP.png"))); // NOI18N
        btnXoaMon.setBorder(null);
        btnXoaMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaMonActionPerformed(evt);
            }
        });

        btnTaoHoaDon.setBackground(new java.awt.Color(0, 204, 204));
        btnTaoHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTaoHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan1_qlbantrasua/Views/icon/add.png"))); // NOI18N
        btnTaoHoaDon.setText("Tạo Hóa Đơn");
        btnTaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnTaoHoaDon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoaMon)
                .addGap(18, 18, 18)
                .addComponent(btnLamMoiGioHang)
                .addGap(22, 22, 22))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoaMon)
                    .addComponent(btnTaoHoaDon)
                    .addComponent(btnLamMoiGioHang)))
        );

        jPanel8.setBackground(new java.awt.Color(102, 204, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Thông Tin Đơn Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setText("Tên Nhân Viên");

        jLabel2.setText("Mã Hóa Đơn");

        jLabel3.setText("Ngày Tạo");

        jLabel4.setText("SDT KH");

        jLabel5.setText("Tên Khách Hàng");

        jLabel6.setText("Điểm Khách Hàng");

        lblTongTienHang.setText("Tổng Tiền Hàng");

        jLabel8.setText("Giảm Giá");

        jLabel9.setText("Khách Cần Trả");

        jLabel10.setText("Tiền Khách Đưa");
        jLabel10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel10KeyPressed(evt);
            }
        });

        jLabel11.setText("Tiền Trả Lại");

        txtTongTienHang.setText("0");

        txtGiamGia.setText("0");
        txtGiamGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGiamGiaKeyPressed(evt);
            }
        });

        txtTienKhachDua.setText("0");
        txtTienKhachDua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTienKhachDuaActionPerformed(evt);
            }
        });
        txtTienKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienKhachDuaKeyPressed(evt);
            }
        });

        txtKhachCanTra.setText("0");

        txtTienTraLai.setText("0");

        btnHuy.setBackground(new java.awt.Color(255, 51, 51));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("Hủy");
        btnHuy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnThanhToan.setBackground(new java.awt.Color(0, 204, 0));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnTimKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan1_qlbantrasua/Views/icon/searh.png"))); // NOI18N
        btnTimKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKhachHangActionPerformed(evt);
            }
        });

        chkTienMat.setText("Tiền Mặt");

        chkChuyenKhoan.setText("Chuyển Khoản");

        btnApDungDiemKM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan1_qlbantrasua/Views/icon/confirmation.png"))); // NOI18N
        btnApDungDiemKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApDungDiemKMActionPerformed(evt);
            }
        });

        jLabel13.setText("Ghi Chú");

        txaGhiChu.setColumns(20);
        txaGhiChu.setRows(5);
        jScrollPane6.setViewportView(txaGhiChu);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(txtSDTKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnTimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNgayTao, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                        .addComponent(txtTenNhanVien)
                                        .addComponent(txtMaHoaDon))))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblTenKhachHang)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblIDKH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(lblDiem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnApDungDiemKM, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTongTienHang)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkChuyenKhoan))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTienTraLai)
                            .addComponent(txtTienKhachDua)
                            .addComponent(txtKhachCanTra)
                            .addComponent(txtGiamGia)
                            .addComponent(txtTongTienHang)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(chkTienMat, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTongTienHang)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTongTienHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8)
                    .addComponent(txtMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9)
                    .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKhachCanTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtTienTraLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkChuyenKhoan)
                            .addComponent(chkTienMat)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(btnTimKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(10, 10, 10))
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(txtSDTKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblTenKhachHang)
                            .addComponent(lblIDKH))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(lblDiem)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnApDungDiemKM))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnHuy, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(25, 25, 25))
        );

        txtTimKiemSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemSanPhamKeyPressed(evt);
            }
        });

        cbbDanhMuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbDanhMucItemStateChanged(evt);
            }
        });
        cbbDanhMuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbDanhMucMouseClicked(evt);
            }
        });

        btnRefesh.setBackground(new java.awt.Color(102, 204, 255));
        btnRefesh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan1_qlbantrasua/Views/icon/refresh.png"))); // NOI18N
        btnRefesh.setBorder(null);
        btnRefesh.setBorderPainted(false);
        btnRefesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefeshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTimKiemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(175, 175, 175)
                        .addComponent(cbbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRefesh, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefesh, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTimKiemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHoaDonActionPerformed
        NhanVien nhanVien = new NhanVien(nhanVienLogin.getId(), nhanVienLogin.getMa(), nhanVienLogin.getHoVaTen());
        int sTT = qLHoaDon.getListHoaDonDB().size() + 1;
        String maHD = "HD" + String.valueOf(sTT);
        HoaDon hoaDon = new HoaDon(maHD, new Date(), nhanVien);
        qLHoaDon.themHoaDon(hoaDon);
        loadTableHDChuaThanhToan(qLHoaDon.getListHDChuaThanhToan());
    }//GEN-LAST:event_btnTaoHoaDonActionPerformed

    private void tblHoaDonChoThanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChoThanhToanMouseClicked
        int row = tblHoaDonChoThanhToan.getSelectedRow();
        HoaDon hoaDon = qLHoaDon.getListHDChoDB().get(row);
        txtMaHoaDon.setText(hoaDon.getMa());
        txtTenNhanVien.setText(hoaDon.getNhanVien().getHoVaTen());
        txtNgayTao.setText(hoaDon.getNgayTao().toString());
        this.listCTGH = qLCTGH.getListCTGioHang(txtMaHoaDon.getText());
        loadTableGioHang(listCTGH);

    }//GEN-LAST:event_tblHoaDonChoThanhToanMouseClicked

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        if (txtMaHoaDon.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn cần thêm sản phẩm!");
            return;
        }
        int indexHoaDon = tblHoaDonChoThanhToan.getSelectedRow();
        int indexSanPham = tblSanPham.getSelectedRow();
        String tenSanPham = tblSanPham.getValueAt(indexSanPham, 0).toString();
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có thêm " + tenSanPham + " vào giỏ hàng không?");
        if (confirm == JOptionPane.YES_OPTION) {
            MainFormView mainFormView = null;
            OptionSanPhamView option = new OptionSanPhamView(mainFormView, true);
            option.setEditDaTa(listCanTim.get(indexSanPham));
            option.setEditThongTin(qLHoaDon.getListHDChoDB().get(indexHoaDon));
            option.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Chưa thêm sản phẩm");
            return;
        }
        this.listCTGH = qLCTGH.getListCTGioHang(txtMaHoaDon.getText());
        loadTableGioHang(listCTGH);
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void txtGiamGiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiamGiaKeyPressed
        double tongTien = Double.parseDouble(txtTongTienHang.getText());
        double tienKhuyenMai = Double.parseDouble(txtGiamGia.getText());
        double tienPhaiTra = tongTien - tienKhuyenMai;
        txtKhachCanTra.setText(String.valueOf(tienPhaiTra));
        double tienKhachDua = Double.parseDouble(txtTienKhachDua.getText());
        double tienCanTra = Double.parseDouble(txtKhachCanTra.getText());
        double tienTraLai = tienKhachDua - tienCanTra;
        if (tienKhachDua >= tienPhaiTra) {
            btnThanhToan.setEnabled(true);
        } else {
            btnThanhToan.setEnabled(false);
        }
        txtTienTraLai.setText(String.valueOf(tienTraLai));
    }//GEN-LAST:event_txtGiamGiaKeyPressed

    private void txtTienKhachDuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKhachDuaKeyPressed
        double tongTien = Double.parseDouble(txtTongTienHang.getText());
        double tienKhuyenMai = Double.parseDouble(txtGiamGia.getText());
        double tienPhaiTra = tongTien - tienKhuyenMai;

        double tienKhachDua = Double.parseDouble(txtTienKhachDua.getText());
        double tienTraLai = tienKhachDua - tienPhaiTra;
        if (tienKhachDua >= tienPhaiTra) {
            btnThanhToan.setEnabled(true);
        } else {
            btnThanhToan.setEnabled(false);
        }
        txtTienTraLai.setText(String.valueOf(tienTraLai));
    }//GEN-LAST:event_txtTienKhachDuaKeyPressed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        if (txtMaHoaDon.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa Đơn cần thanh toán!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn thanh toán hóa đơn " + txtMaHoaDon.getText());
        if (confirm == JOptionPane.YES_OPTION) {
            if (chkChuyenKhoan.isSelected() || chkTienMat.isSelected()) {
                int rowHoaDon = tblHoaDonChoThanhToan.getSelectedRow();
                ArrayList<CTGioHang> list = listCTGH;
                ArrayList<HoaDonChiTiet> listHDCT = new ArrayList();
                System.out.println(listCTGH.size());
                for (CTGioHang sanPhamGioHang : list) {
                    HoaDon hoaDon = qLHoaDon.getListHDChoDB().get(rowHoaDon);
                    SanPham sanPham = new SanPham(sanPhamGioHang.getIdSanPham(), sanPhamGioHang.getTenSanPham());
                    MucDa mucDa = new MucDa(sanPhamGioHang.getIdDa(), sanPhamGioHang.getTenDa());
                    MucDuong mucDuong = new MucDuong(sanPhamGioHang.getIdDuong(), sanPhamGioHang.getTenDuong());
                    Topping topping = new Topping(sanPhamGioHang.getIdTopping(), sanPhamGioHang.getTenTopping());
                    HoaDonChiTiet hoaDonChiTiet = new HoaDonChiTiet(hoaDon, sanPham, sanPhamGioHang.getDongGia(), sanPhamGioHang.getSoLuongSP(),
                            mucDuong, mucDa, topping, mucDuong.getGia(), mucDa.getGia(), topping.getGia());
                    listHDCT.add(hoaDonChiTiet);
                }
                for (HoaDonChiTiet hoaDonChiTiet : listHDCT) {
                    qLHDCT.themHDCT(hoaDonChiTiet);
                }
                int hinhThucThanhToan = -1;
                if (chkTienMat.isSelected() && chkChuyenKhoan.isSelected()) {
                    hinhThucThanhToan = 2;
                } else if (chkChuyenKhoan.isSelected()) {
                    hinhThucThanhToan = 1;
                } else {
                    hinhThucThanhToan = 0;
                }
                System.out.println("hinh thuc thanh toan: " + hinhThucThanhToan);

                String maHoaDon = txtMaHoaDon.getText();

                if (lblIDKH.getText().trim().length() > 0) {
                    KhachHang khachHangMua = new KhachHang(lblIDKH.getText());
                    HoaDon hoaDonOfKH = new HoaDon(Double.parseDouble(txtTongTienHang.getText()), Double.parseDouble(txtGiamGia.getText()),
                            Double.parseDouble(txtKhachCanTra.getText()), new Date(), txaGhiChu.getText(), 1, hinhThucThanhToan, khachHangMua);
                    JOptionPane.showMessageDialog(this, qLHoaDon.updateThanhToanHoaDonCoKhachHang(hoaDonOfKH, maHoaDon));
                } else {
                    HoaDon hoaDon = new HoaDon(Double.parseDouble(txtTongTienHang.getText()), Double.parseDouble(txtGiamGia.getText()),
                            Double.parseDouble(txtKhachCanTra.getText()), new Date(), txaGhiChu.getText(), 1, hinhThucThanhToan);
                    JOptionPane.showMessageDialog(this, qLHoaDon.updateHoaDon(hoaDon, maHoaDon));
                    loadTableHDChuaThanhToan(qLHoaDon.getListHDChuaThanhToan());
                    loadTableHDDaThanhToan(qLHoaDon.getListHDDaThanhToan());
                    clearTableGioHang();
                    clearForm();
                }
                int diemMoi = Integer.parseInt(lblDiem.getText()) + 1;
                qLKhachHang.updateDiemKhachHang(diemMoi, txtSDTKhachHang.getText());
                qLCTGH.xoaCTGHKhiThanhToan(maHoaDon);
                loadTableHDChuaThanhToan(qLHoaDon.getListHDChuaThanhToan());
                loadTableHDDaThanhToan(qLHoaDon.getListHDDaThanhToan());
                JOptionPane.showMessageDialog(this, "Thanh toán thành công hóa đơn " + txtMaHoaDon.getText());
                clearTableGioHang();
                clearForm();
            } else {
                JOptionPane.showMessageDialog(this, "Chưa chọn hình thức thanh toán!");
                return;
            }

        }

    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        if (txtMaHoaDon.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa Đơn cần hủy!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn hủy hóa đơn này không?");
        if (confirm == JOptionPane.YES_OPTION) {
            String lyDoHuy = JOptionPane.showInputDialog("Mời bạn nhập lý do hủy");
            String maHoaDon = txtMaHoaDon.getText();
            JOptionPane.showMessageDialog(this, qLHoaDon.huyHoaDon(lyDoHuy, maHoaDon));
            loadTableHDChuaThanhToan(qLHoaDon.getListHDChuaThanhToan());
            loadTableHDHuyThanhToan(qLHoaDon.getListHDHuyThanhToan());
            clearTableGioHang();
        }
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnLamMoiGioHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiGioHangActionPerformed
        if (txtMaHoaDon.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa có thông tin hóa đơn cần làm mới!");
            return;
        }
        String maHoaDon = txtMaHoaDon.getText();
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa hết sản phậm đang chọn không?");
        if (confirm == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(this, qLCTGH.xoaToanBoGioHang(maHoaDon));
            clearTableGioHang();
        }

    }//GEN-LAST:event_btnLamMoiGioHangActionPerformed

    private void btnXoaMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaMonActionPerformed
        if (txtMaHoaDon.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Hóa Đơn cần xóa món!");
            return;
        }
        String maHoaDon = txtMaHoaDon.getText();
        ArrayList<CTGioHang> listGioHang = qLCTGH.getListCTGioHang(maHoaDon);
        System.out.println(listGioHang.size());
        int index = tblGioHang.getSelectedRow();
        System.out.println(index);
        CTGioHang sanPhamChiTiet = listGioHang.get(index);
        String idCTGH = sanPhamChiTiet.getId();
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa sản phẩm khỏi giỏ hàng không?");
        if (confirm == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(this, qLCTGH.xoaCTGH(idCTGH));
            loadTableGioHang(qLCTGH.getListCTGioHang(maHoaDon));
        }

    }//GEN-LAST:event_btnXoaMonActionPerformed

    private void jLabel10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel10KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel10KeyPressed

    private void txtTimKiemSanPhamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemSanPhamKeyPressed
        ArrayList<SanPhamFromBanHang> listTimOut = qLSanPham.timSPTheoTen(txtTimKiemSanPham.getText());
        loadTableSanpham(listTimOut);
        listCanTim = qLSanPham.timKiemSPDBTheoTen(txtTimKiemSanPham.getText());
    }//GEN-LAST:event_txtTimKiemSanPhamKeyPressed

    private void cbbDanhMucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbDanhMucItemStateChanged
        DanhMucSP danhMuc = (DanhMucSP) cbbDanhMuc.getSelectedItem();
        String tenDanhMuc = danhMuc.getTen();
        ArrayList<SanPhamFromBanHang> listTimOut = qLSanPham.timSPTheoDanhMuc(tenDanhMuc);
        loadTableSanpham(listTimOut);
        listCanTim = qLSanPham.timKiemSPDBTheoDanhMuc(tenDanhMuc);
    }//GEN-LAST:event_cbbDanhMucItemStateChanged

    private void cbbDanhMucMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbDanhMucMouseClicked
        System.out.println("Load lại table");
    }//GEN-LAST:event_cbbDanhMucMouseClicked

    private void btnRefeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefeshActionPerformed
        clearForm();
    }//GEN-LAST:event_btnRefeshActionPerformed

    private void btnTimKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKhachHangActionPerformed
        if (txtSDTKhachHang.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Chưa nhập số điện thoại khách hàng!");
            return;
        }
        String sdt = txtSDTKhachHang.getText();
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn muốn tìm theo khách hàng có sdt " + sdt + "?");
        if (confirm == JOptionPane.YES_OPTION) {
            KhachHang khachhang = qLKhachHang.timKhachHangBySDT(sdt);
            if (khachhang != null) {
                lblTenKhachHang.setText(khachhang.getHoVaTen());
                lblDiem.setText(String.valueOf(khachhang.getDiem()));
                lblIDKH.setText(khachhang.getId());
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin khách hàng!");
                return;
            }
        }
    }//GEN-LAST:event_btnTimKhachHangActionPerformed

    private void btnApDungDiemKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApDungDiemKMActionPerformed
        int diem = Integer.parseInt(lblDiem.getText());
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn đổi điểm sang khuyến mãi không?");
        if (confirm == JOptionPane.YES_OPTION) {
            String diemMuonDoi = JOptionPane.showInputDialog("Nhập số điểm bạn muốn đổi!");
            int soDiemMuonDoi = Integer.parseInt(diemMuonDoi);
            if (soDiemMuonDoi <= diem) {
                double soTienKhuyenMai = soDiemMuonDoi * 1000;
                txtGiamGia.setText(String.valueOf(soTienKhuyenMai));
                double tongTien = Double.parseDouble(txtTongTienHang.getText());
                double tienPhaiTra = tongTien - soTienKhuyenMai;
                txtKhachCanTra.setText(String.valueOf(tienPhaiTra));
                int diemConLai = diem - soDiemMuonDoi;
                JOptionPane.showMessageDialog(this, qLKhachHang.updateDiemKhachHang(diemConLai, txtSDTKhachHang.getText()));
                lblDiem.setText(String.valueOf(diemConLai));
            } else {
                JOptionPane.showMessageDialog(this, "Điểm muốn đổi phải < hoặc = số điểm hiện có là " + diem);
                return;
            }
        }
    }//GEN-LAST:event_btnApDungDiemKMActionPerformed

    private void txtTienKhachDuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTienKhachDuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienKhachDuaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApDungDiemKM;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnLamMoiGioHang;
    private javax.swing.JButton btnRefesh;
    private javax.swing.JButton btnTaoHoaDon;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTimKhachHang;
    private javax.swing.JButton btnXoaMon;
    private javax.swing.JComboBox<String> cbbDanhMuc;
    private javax.swing.JCheckBox chkChuyenKhoan;
    private javax.swing.JCheckBox chkTienMat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDiem;
    private javax.swing.JLabel lblIDKH;
    private javax.swing.JLabel lblTenKhachHang;
    private javax.swing.JLabel lblTongTienHang;
    private javax.swing.JTable tblDaThanhToan;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblHoaDonChoThanhToan;
    private javax.swing.JTable tblHuyThanhToan;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txaGhiChu;
    private javax.swing.JTextField txtGiamGia;
    private javax.swing.JTextField txtKhachCanTra;
    private javax.swing.JTextField txtMaHoaDon;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtSDTKhachHang;
    private javax.swing.JTextField txtTenNhanVien;
    private javax.swing.JTextField txtTienKhachDua;
    private javax.swing.JTextField txtTienTraLai;
    private javax.swing.JTextField txtTimKiemSanPham;
    private javax.swing.JTextField txtTongTienHang;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.qLHoaDon = new HoaDonServiceImpl();
        this.qLSanPham = new SanPhamServiceImpl();
        this.qLCTGH = new CTGHServiceImpl();
        this.qLSanPham = new SanPhamServiceImpl();
        this.qLHDCT = new HDCTServiceImpl();
        this.qLDanhMuc = new DanhMucServiceImpl();
        this.qLKhachHang = new KhachHangServiceimpl();
        listCanTim = qLSanPham.getListSanPhamDB();
    }

    private void loadTableHDChuaThanhToan(ArrayList<HDBHViewModel> listHDChuaThanhToan) {
        dtm = (DefaultTableModel) tblHoaDonChoThanhToan.getModel();
        dtm.setRowCount(0);

        for (HDBHViewModel hoaDon : listHDChuaThanhToan) {
            dtm.addRow(new Object[]{
                hoaDon.getMaHoaDon(),
                hoaDon.getTenNhanVien(),
                hoaDon.getNgayTao(),
                hoaDon.getTrangThai() == 0 ? "Chờ thanh toán" : hoaDon.getTrangThai() == 1 ? "Đã thanh toán" : "Hủy thanh toán"
            });
        }
    }

    private void loadTableHDDaThanhToan(ArrayList<HDBHViewModel> listHDDaThanhToan) {
        dtm = (DefaultTableModel) tblDaThanhToan.getModel();
        dtm.setRowCount(0);
        for (HDBHViewModel hoaDon : listHDDaThanhToan) {
            dtm.addRow(new Object[]{
                hoaDon.getMaHoaDon(),
                hoaDon.getTenNhanVien(),
                hoaDon.getNgayTao(),
                hoaDon.getTrangThai() == 0 ? "Chờ thanh toán" : hoaDon.getTrangThai() == 1 ? "Đã thanh toán" : "Hủy thanh toán"
            });
        }
    }

    private void loadTableHDHuyThanhToan(ArrayList<HDBHViewModel> listHDHuyThanhToan) {
        dtm = (DefaultTableModel) tblHuyThanhToan.getModel();
        dtm.setRowCount(0);
        for (HDBHViewModel hoaDon : listHDHuyThanhToan) {
            dtm.addRow(new Object[]{
                hoaDon.getMaHoaDon(),
                hoaDon.getTenNhanVien(),
                hoaDon.getNgayTao(),
                hoaDon.getTrangThai() == 0 ? "Chờ thanh toán" : hoaDon.getTrangThai() == 1 ? "Đã thanh toán" : "Hủy thanh toán"
            });
        }
    }

    private void loadTableSanpham(ArrayList<SanPhamFromBanHang> listSPFormBH) {
        dtm = (DefaultTableModel) tblSanPham.getModel();
        dtm.setRowCount(0);
        for (SanPhamFromBanHang sanPham : listSPFormBH) {
            dtm.addRow(new Object[]{
                sanPham.getTenSanPham(),
                sanPham.getGiaSanPham(),
                sanPham.getTenDanhMuc(),
                sanPham.getDuongDanAnh()
            });
        }
        tblSanPham.getTableHeader().setReorderingAllowed(false);
        tblSanPham.getColumnModel().getColumn(3).setCellRenderer(new ImageRender());
    }

//    Xử Lý Hình Ảnh Trong Table
    private class ImageRender extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            String photoName = value.toString();
            ImageIcon img = setSizeImgTable(value.toString());
            setIcon(img);
            setBackground(getBackground());
            return this;
        }

    }

    private ImageIcon setSizeImgTable(String imagePath) {
        ImageIcon myImage = new ImageIcon(imagePath);
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(50, 60, Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    private void loadTableGioHang(ArrayList<CTGioHang> listCTGioHang) {
        this.listCTGH = qLCTGH.getListCTGioHang(txtMaHoaDon.getText());
        dtm = (DefaultTableModel) tblGioHang.getModel();
        dtm.setRowCount(0);
        int sTT = 1;
        double tongTienHang = 0;
        for (CTGioHang sanPham : listCTGioHang) {
            dtm.addRow(new Object[]{
                sTT++,
                sanPham.getTenSanPham(),
                sanPham.getSoLuongSP(),
                sanPham.getTenDuong(),
                sanPham.getTenDa(),
                sanPham.getTenTopping(),
                sanPham.getTongTien()
            });
            tongTienHang = tongTienHang + sanPham.getTongTien();
        }
        txtTongTienHang.setText(String.valueOf(tongTienHang));
        double tienGiamGia = Double.parseDouble(txtGiamGia.getText());
        double tienPhaiTra = tongTienHang - tienGiamGia;
        txtKhachCanTra.setText(String.valueOf(tienPhaiTra));
    }

    void editData(NhanVien nhanVienDangNhapThanhCong) {
        NhanVien nhanVien = new NhanVien();
        nhanVien.setId(nhanVienDangNhapThanhCong.getId());
        nhanVien.setMa(nhanVienDangNhapThanhCong.getMa());
        nhanVien.setHoVaTen(nhanVienDangNhapThanhCong.getHoVaTen());
        this.nhanVienLogin = nhanVien;
    }

    private void clearForm() {
        txtTenNhanVien.setText("");
        txtMaHoaDon.setText("");
        txtNgayTao.setText("");
        txtSDTKhachHang.setText("");
        txaGhiChu.setText("");
        txtTongTienHang.setText("0");
        txtGiamGia.setText("0");
        txtKhachCanTra.setText("0");
        txtTienTraLai.setText("0");
        lblTenKhachHang.setText("");
        txtTienKhachDua.setText("0");
        lblDiem.setText("");
        lblIDKH.setText("");
        chkChuyenKhoan.setSelected(false);
        chkTienMat.setSelected(false);
        listCanTim = qLSanPham.getListSanPhamDB();
        loadTableSanpham(qLSanPham.getListSPFormBH());
    }

    private void clearTableGioHang() {
        tblGioHang.setModel(new DefaultTableModel(null, new String[]{
            "STT", "Tên Món", "Số Lượng", "Mức Đường", "Mức Đá", "Topping", "Tổng Tiền"
        }));
    }

    private void loadCBBDanhMuc(ArrayList<DanhMucSP> listDanhMucSPKinhDoanhDB) {
        dcbmDanhMuc = (DefaultComboBoxModel) cbbDanhMuc.getModel();
        for (DanhMucSP danhMucSP : listDanhMucSPKinhDoanhDB) {
            dcbmDanhMuc.addElement(danhMucSP);
        }
    }

}
